type MerkleTree @entity {
    id: ID!
    depth: Int!
    root: BigInt
    size: Int!
    group: Group!
}

type Group @entity {
    id: ID!
    timestamp: BigInt!
    merkleTree: MerkleTree!
    admin: Bytes
    members: [Member!] @derivedFrom(field: "group")
}

type Member @entity {
    id: ID!
    timestamp: BigInt!
    identityCommitment: BigInt!
    index: Int!
    group: Group!
}

type Manager @entity {
  id: ID! # address
  timestamp: BigInt!
  groupId: BigInt!
  group: Group!
}

type ServiceProvider @entity {
  id: ID! # address
  timestamp: BigInt!
  serviceProviderId: BigInt!
  sponsorFeeBalance: BigInt!
}

type UserAccount @entity {
  id: ID! # Combination of serviceProviderId and message (account ID)
  timestamp: BigInt!
  nullifier: BigInt!
  accountId: BigInt! # message from the proof
  serviceProviderId: BigInt!
}